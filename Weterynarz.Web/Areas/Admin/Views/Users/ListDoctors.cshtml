@namespace Weterynarz.Domain.ViewModels.Users
@model PagingList<UserViewModel>
@{
    ViewData["Title"] = "Lista lekarzy";
}

@section breadcrumb {
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index" asp-area="@AreaNames.Admin">Strona główna</a></li>
        <li class="breadcrumb-item active">Lista lekarzy</li>
    </ol>
}

<div class="container">    
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <i class="fa fa-align-justify"></i> @ResAdmin.accountsListViewModel_listDoctors
                </div>
                <div class="card-body">
                    <table class="table table-striped" id="doctorsTable">
                        <thead>
                            <tr>
                                <th>Imię</th>
                                <th>Nazwisko</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Any())
                            {
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@item.Name</td>
                                        <td>@item.Surname</td>
                                        <td class="text-right">
                                            <div class="btn-group" role="group">
                                                <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    Menu
                                                </button>
                                                <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                                    <a class="dropdown-item showGraphic" data-doctor-id="@item.Id">Zobacz aktualny grafik</a>
                                                    @*<a href="@Url.Action("ShowGraphic", "DoctorGraphics", new { area = AreaNames.Admin, id = item.Id })" class="btn btn-secondary">Zobacz aktualny grafik</a>*@
                                                    @if (!User.IsInRole(UserRoles.Client))
                                                    {
                                                        <a href="@Url.Action("ShowGraphics", "DoctorGraphics", new { area = AreaNames.Admin, doctorId = item.Id })" class="dropdown-item">Zobacz wszystkie grafiki</a>
                                                    }
                                                    @if (!User.IsInRole(UserRoles.Client) && !User.IsInRole(UserRoles.Doctor))
                                                    {
                                                        <div class="dropdown-divider"></div>
                                                        <a href="@Url.Action("GenerateVisitReport", "Visits", new { area = AreaNames.Admin, doctorId = item.Id })" class="dropdown-item">Generuj zestawienie wizyt</a>
                                                    }
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr class="text-center">
                                    <td colspan="5">@ResAdmin.list_emptyRecords</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <nav aria-label="Suppliers navigation example">
                        @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="graphicModal" tabindex="-1" role="dialog" aria-labelledby="graphicModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $(".btnDeleteUser").click(function () {
                var rowId = $(this).data('id');
                var row = $(this).parents('tr');
                var table = $("#usersTable");

                AppNotify.confirm('Czy na pewno chcesz usunąć tego użytkownika?', function () {
                    $.ajax({
                        method: "POST",
                        url: '@Url.Action("DeleteAsync", "Users", new { area = AreaNames.Admin})',
                        data: {
                            id: rowId
                        },
                        success: function (response) {
                            if (response.messageStatus == 2)
                            {
                                row.fadeOut();
                            }
                            AppNotify.notifyMessage(response);
                        }
                    });
                });
            });

            $(".btnBanUser").click(function () {
                var rowId = $(this).data('id');
                var row = $(this).parents('tr');
                var table = $("#usersTable");

                AppNotify.confirm('Czy na pewno chcesz zablokować tego użytkownika?', function () {
                    $.ajax({
                        method: "POST",
                        url: '@Url.Action("BanAsync", "Users", new { area = AreaNames.Admin})',
                        data: {
                            id: rowId
                        },
                        success: function (response) {
                            AppNotify.notifyMessage(response);
                        }
                    });
                });
            });

            $(".showGraphic").click(function () {
                var doctorIdData = $(this).data('doctor-id');
                if (doctorIdData != "")
                {
                    $.ajax({
                        method: "GET",
                        url: '@Url.Action("ShowGraphic", "DoctorGraphics", new { area = AreaNames.Admin})',
                        data: {
                            doctorId: doctorIdData
                        },
                        success: function (response) {
                            if (response != "")
                            {
                                $("#graphicModal .modal-body").html(response);
                                $("#graphicModal").modal('show');
                            }
                            else
                            {
                                location.reload();
                            }
                        }
                    });
                }
            });
        });
    </script>
}
