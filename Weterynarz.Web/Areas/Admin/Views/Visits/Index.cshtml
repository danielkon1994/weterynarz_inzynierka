@namespace Weterynarz.Domain.ViewModels.Visit
@model PagingList<VisitIndexViewModel>
@{
    ViewData["Title"] = "Wizyty";
}

@section breadcrumb {
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index" asp-area="@AreaNames.Admin">Strona główna</a></li>
        <li class="breadcrumb-item active">Wizyty</li>
    </ol>
}

<div class="container">
    <div class="row mb-3">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    @ResAdmin.text_options
                </div>
                <div class="card-body">
                    <a class="btn btn-warning" asp-controller="Visits" asp-action="Create">@ResAdmin.button_add</a>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <i class="fa fa-align-justify"></i> @ResAdmin.visitsIndex_list
                </div>
                <div class="card-body">
                    <table class="table table-striped table-responsive">
                        <thead>
                            <tr>
                                <th>Data wizyty</th>
                                <th>Zwierzę</th>
                                <th>Lekarz</th>
                                <th>Zatwierdzona</th>
                                <th>Aktywna</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Any())
                            {
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@item.VisitDate.ToString(FormatsDate.DateWithoutTime)</td>
                                        <td>@item.Animal</td>
                                        <td>@item.Doctor</td>
                                        <td>@(item.Approved ? Html.Raw("<span class='badge badge-success'>Zatwierdzona</span>") : Html.Raw("<span class='badge badge-danger'>Nie zatwierdzona</span>"))</td>
                                        <td>@(item.Active ? Html.Raw("<span class='badge badge-success'>Aktywna</span>") : Html.Raw("<span class='badge badge-danger'>Nieaktywna</span>"))</td>
                                        <td class="text-right">
                                            @*<a href="@Url.Action("Edit", "Visits", new { area = AreaNames.Admin, id = item.Id})" class="btn btn-dark">Edytuj</a>
            <a href="@Url.Action("Delete", "Visits", new { area = AreaNames.Admin, id = item.Id })" id="btnDelete" class="btn btn-danger">Usuń</a>*@
                                            <div class="btn-group" role="group">
                                                <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    Menu
                                                </button>
                                                <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                                    @if(!item.Approved)
                                                    { 
                                                        <a href="@Url.Action("Approved", "Visits", new { area = AreaNames.Admin, id = item.Id})" class="dropdown-item">Zatwierdź wizytę</a>
                                                    }
                                                    @if(item.SummaryId != null)
                                                    { 
                                                        <a href="@Url.Action("SummaryVisit", "Visits", new { area = AreaNames.Admin, id = item.SummaryId})" class="dropdown-item">Pokaż podsumowanie wizyty</a>
                                                    }
                                                    else
                                                    {
                                                        <a href="@Url.Action("CreateSummaryVisit", "Visits", new { area = AreaNames.Admin, visitId = item.Id})" class="dropdown-item">Dodaj podsumowanie wizyty</a>
                                                    }
                                                    <a href="@Url.Action("Edit", "Visits", new { area = AreaNames.Admin, id = item.Id})" class="dropdown-item">Edytuj</a>
                                                    <a href="@Url.Action("Delete", "Visits", new { area = AreaNames.Admin, id = item.Id })" id="btnDelete" class="dropdown-item">Usuń</a>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr class="text-center">
                                    <td colspan="6">@ResAdmin.list_emptyRecords</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <nav aria-label="Suppliers navigation example">
                        @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        //$(document).ready(function () {

        //    $('#btnDeleteType').on('click', function (e) {
        //        e.preventDefault();

        //        var $row = $(this).closest('tr');

        //    });

        //});
    </script>
}
